{
	"name": "DATA_Flow_Dim_Load",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_ASQL_Movies",
						"type": "DatasetReference"
					},
					"name": "tMoviews"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_MovieStatus",
						"type": "DatasetReference"
					},
					"name": "tMoviesStatus"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_OnlineService",
						"type": "DatasetReference"
					},
					"name": "tOnlineService"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_ASQL_DimMovie",
						"type": "DatasetReference"
					},
					"name": "DimMovie"
				},
				{
					"dataset": {
						"referenceName": "DS_ASQL_DimOnlineService",
						"type": "DatasetReference"
					},
					"name": "DimOnlineService"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "AddColumns"
				},
				{
					"name": "select2"
				},
				{
					"name": "AddColumns1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          MovieId as integer,",
				"          MovieIdNK as integer,",
				"          Budget as integer,",
				"          HomepagePath as string,",
				"          Title as string,",
				"          OriginalTitle as string,",
				"          ReleaseDate as date,",
				"          Revenue as long,",
				"          Runtime as integer,",
				"          MovieStatusId as integer,",
				"          AvgVote as decimal(3,1),",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          SrcFileName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tMoviews",
				"source(output(",
				"          MovieStatusId as integer,",
				"          MovieStatusName as string,",
				"          CreatedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tMoviesStatus",
				"source(output(",
				"          ServiceId as integer,",
				"          ServiceCode as string,",
				"          ServiceName as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tOnlineService",
				"tMoviews, tMoviesStatus join(tMoviews@MovieStatusId == tMoviesStatus@MovieStatusId,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          MovieIdNK,",
				"          Budget,",
				"          Title,",
				"          ReleaseDate,",
				"          Runtime,",
				"          MovieStatus = MovieStatusName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select2 derive(CreatedDate = currentTimestamp(),",
				"          ModifiedDate = currentTimestamp()) ~> AddColumns",
				"tOnlineService select(mapColumn(",
				"          ServiceCode,",
				"          ServiceName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select1 derive(CreatedDate = currentTimestamp(),",
				"          ModifiedDate = currentTimestamp()) ~> AddColumns1",
				"AddColumns1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          cast as string,",
				"          crew as string,",
				"          id as string,",
				"          pipelineId as string,",
				"          source_filename as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError') ~> DimMovie",
				"AddColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          cast as string,",
				"          crew as string,",
				"          id as string,",
				"          pipelineId as string,",
				"          source_filename as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> DimOnlineService"
			]
		}
	}
}